name: Cypress Tests

on:
  push:
    branches:
      - staging
  # schedule:
  #   # Runs every 5 minutes
  #   - cron: "*/5 * * * *"

jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    # environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging

      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress E2E run
        uses: cypress-io/github-action@v6
        with:
          config-file: cypress/config/cypress.config.ts
          config: baseUrl=http://localhost:3000
          # record: true
          browser: chrome
          build: npm run build
          start: npm start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 60
        env:
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Server env vars
          API_URL: https://jsonplaceholder.typicode.com/
          # cypress e2e env vars
          TEST_ENV: ${{ vars.TEST_ENV }}

      # Upload screenshots on failure
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30

      # # Upload videos
      # - name: Upload videos
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: cypress-videos
      #     path: cypress/videos
      #     retention-days: 30

      # Upload tests report
      - name: Upload tests HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-tests-html-report
          path: cypress/reports/html
          retention-days: 30

      # Copy Cypress tests report to checkout branch
      - name: Copy Cypress tests HTML report
        if: always()
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M")
          REPORT_DIR="cypress-tests-reports/e2e/tests-report-${TIMESTAMP}"
          mkdir -p $REPORT_DIR
          cp -R cypress/reports/html/* $REPORT_DIR

      # Push Cypress tests report to checkout branch
      - name: Commit and push Cypress tests HTML report
        if: always()
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add cypress-tests-reports/
          git commit -m "Add Cypress tests report from ${{ github.run_id }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Deploy tests report to github pages
      - name: Deploy tests report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cypress/reports

      # Send Slack notification on completion
      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Cypress E2E Tests Report - https://github.com/Anilk1sagar/react-cypress-with-github-actions/actions/runs/${{ github.run_id }}"
          SLACK_TITLE: Cypress Tests Results
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
